name: dev_actions

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:

    runs-on: windows-latest
    env:
      Source: ${{secrets.PUBLISH_SOURCE}}
      Dest: ${{secrets.PUBLISH_DEST}}
      Username: ${{secrets.USERNAME}}
      ComputerName: ${{secrets.COMPUTER_NAME}}
      Password: ${{secrets.PASSWORD}} 
      

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Caching
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: ${{ runner.os }}-nuget-   
    - name: Restore dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: publish
      run: dotnet publish --no-build 
    - name: artifact_upload
      uses: actions/upload-artifact@v2
      with:
        name: generate_build_artifact
        path: D:\a\CI_CD_training\CI_CD_training\Ci_Cd_DemoApp\bin\Debug\netcoreapp3.1\publish\
    - uses: actions/download-artifact@v2
      with:
        name: generate_build_artifact 
    - name: show files
      shell: cmd
      run: dir D:\a\CI_CD_training\CI_CD_training
    - name: Deploy Application to Livee  
      shell: cmd  
      run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -source:contentPath="${{ env.Source }}" -dest:contentPath="${{ env.Dest}}",computerName="${{ env.ComputerName }}",username="${{ env.Username }}",password="${{ env.Password }}",authtype="Basic",includeAcls="False" -verb:sync -useCheckSum -disableLink:AppPoolExtension -disableLink:ContentExtension -disableLink:CertificateExtension -allowUntrusted'
